name: RegRepo
on:
  push:
    branches: [ master ]
env:
  REPO_DIR_NAME: regrepo #HIDDEN Nome directory
  TEMPLATE: regrepo #HIDDEN Elimina questa variabile se si vogliono mantenere modifiche a job a fronte di update al template
jobs:
  checkout:
    name: Checkout
    runs-on: ubuntu-latest
    outputs:
      versionCheck: ${{ steps.versionCheck.outputs.res }}
    steps:
      - name: Checkout RegRepo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ env.REPO_DIR_NAME }}
      - name: Checkout Regesta Actions
        uses: actions/checkout@v2
        with:
          repository: RegestaItalia/actions
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          path: actions/regesta
      - name: Zip artifact checkout
        run: zip checkout.zip ./* -r
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: checkout
          path: checkout.zip
          retention-days: 1
  alignAfterPr:
    name: Align after PR
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout
          path: ./
      - name: Unzip checkout
        run: unzip checkout.zip
      - name: Align after PR
        uses: ./actions/regesta/alignAfterPr
        with:
          githubToken: ${{ secrets.CI_GITHUB_TOKEN }}
          repoName: ${{ github.event.repository.name }}
  checkPullRequest:
    name: Check Pull Request
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      vars: ${{ steps.prData.outputs.vars }}
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout
          path: ./
      - name: Unzip checkout
        run: unzip checkout.zip
      - name: Get pr data
        uses: ./actions/regesta/regGit/pullRequestData
        id: prData
        with:
          repoName: ${{ github.event.repository.full_name }}
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          commitSha: ${{ github.sha }}
  envToOutput:
    name: Env To Output
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      vars: ${{ steps.envtooutput.outputs.vars }}
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout
          path: ./
      - name: Unzip checkout
        run: unzip checkout.zip
      - name: Env To Output
        id: envtooutput
        uses: ./actions/regesta/envToOutput
        with:
          yamlFilePath: ./${{ env.REPO_DIR_NAME }}/.github/workflows/regrepo.yml
  readDotRegrepo:
    name: Read .regrepo
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      vars: ${{ steps.dotregrepo.outputs.vars }}
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout
          path: ./
      - name: Unzip checkout
        run: unzip checkout.zip
      - name: Read .regrepo
        id: dotregrepo
        uses: ./actions/regesta/regGit/readDotRegRepo
        with:
          filePath: ./${{ env.REPO_DIR_NAME }}/.regrepo/.regrepo.xml
  createRelease:
    name: Create release
    runs-on: ubuntu-latest
    needs: [ checkPullRequest, envToOutput, readDotRegrepo ]
    if: ${{ fromJson(needs.checkPullRequest.outputs.vars).generateRelease == true }}
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout
          path: ./
      - name: Unzip checkout
        run: unzip checkout.zip
      - name: Crea transport
        id: generateRelease
        uses: ./actions/regesta/regGit/generateRegRepoRelease
        with:
          releasePath: ./${{ env.REPO_DIR_NAME }}
          username: ${{ secrets.RST_USER }}
          password: ${{ secrets.RST_PASSWORD }}
          artifactId: ${{ fromJson(needs.readDotRegrepo.outputs.vars).ARTIFACT }}
          package: ${{ fromJson(needs.readDotRegrepo.outputs.vars).MAIN_PACKAGE.ORIGINAL_PACKAGE_NAME }}
          version: ${{ fromJson(needs.checkPullRequest.outputs.vars).version }}
      - name: Crea release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ fromJson(needs.checkPullRequest.outputs.vars).releaseBody }}
          tag: ${{ fromJson(needs.checkPullRequest.outputs.vars).version }}
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          artifacts: ${{ steps.generateRelease.outputs.releasePath }}
